diff --git a/pom.xml b/pom.xml
index 2a5c61c..a4a8987 100644
--- a/pom.xml
+++ b/pom.xml
@@ -14,16 +14,33 @@
     </properties>
 
     <dependencies>
-    <dependency>
-        <groupId>org.apache.logging.log4j</groupId>
-        <artifactId>log4j-api</artifactId>
-        <version>2.17.1</version>
-    </dependency>
+        <dependency>
+            <groupId>org.apache.logging.log4j</groupId>
+            <artifactId>log4j-api</artifactId>
+            <version>2.17.1</version>
+        </dependency>
         <dependency>
             <groupId>org.apache.logging.log4j</groupId>
             <artifactId>log4j-core</artifactId>
             <version>2.17.1</version>
         </dependency>
+        <dependency>
+            <groupId>org.junit.jupiter</groupId>
+            <artifactId>junit-jupiter</artifactId>
+            <version>5.8.1</version>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.junit.platform</groupId>
+            <artifactId>junit-platform-runner</artifactId>
+            <version>1.7.0</version>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.slf4j</groupId>
+            <artifactId>slf4j-api</artifactId>
+            <version>1.7.28</version>
+        </dependency>
     </dependencies>
 
     <build>
@@ -41,15 +58,10 @@
                 <artifactId>maven-surefire-plugin</artifactId>
                 <version>3.0.0-M5</version>
                 <dependencies>
-                    <dependency>
-                        <groupId>org.junit.platform</groupId>
-                        <artifactId>junit-platform-surefire-provider</artifactId>
-                        <version>3.0.0-M5</version>
-                    </dependency>
                     <dependency>
                         <groupId>org.junit.jupiter</groupId>
                         <artifactId>junit-jupiter-engine</artifactId>
-                        <version>3.0.0-M5</version>
+                        <version>5.8.2</version>
                     </dependency>
                 </dependencies>
             </plugin>
diff --git a/src/main/java/com/makotojava/learn/hellojunit5/App.java b/src/main/java/com/makotojava/learn/hellojunit5/App.java
index 1f6fbf3..77b4f0d 100644
--- a/src/main/java/com/makotojava/learn/hellojunit5/App.java
+++ b/src/main/java/com/makotojava/learn/hellojunit5/App.java
@@ -1,14 +1,11 @@
 package com.makotojava.learn.hellojunit5;
 
-/*
+/**
  * Copyright 2017 Makoto Consulting Group, Inc.
- * 
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
- * 
  * http://www.apache.org/licenses/LICENSE-2.0
- * 
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -18,13 +15,11 @@ package com.makotojava.learn.hellojunit5;
 public class App {
   /**
    * Computes the sum of the specified operands.
-   * 
    * As an exercise, implement this method so that all of the unit tests
    * you write for it pass. Once you do that, you're done!
-   * 
    * Hint: if you get stuck, have a look
    * {@link com.makotojava.learn.hellojunit5.solution.App here}.
-   * 
+   *
    * @param operands
    *          These are the operands. It's sort of there in the name.
    * 
@@ -37,14 +32,14 @@ public class App {
    */
   public long add(long[] operands) {
     // Compute the sum
-    long ret = Long.MIN_VALUE;
-    // TDD - add this once we run all the unit tests.
-    //
-    // TODO: As an exercise, implement this method so that all of the unit tests
-    /// you write for it pass. Once you do that, you're done!
-    //
-    // Hint: if you get stuck, look at the {@link com.makotojava.learn.hellojunit5.solution.App App class}
-    //
+    long ret = 0;
+
+    if (operands == null) {
+      throw new IllegalArgumentException("Operands argument cannot be null");
+    }
+    if (operands.length == 0) {
+      throw new IllegalArgumentException("Operands argument cannot be empty");
+    }
 
     for (long i : operands) {
       ret += i;
diff --git a/src/main/java/com/makotojava/learn/hellojunit5/solution/App.java b/src/main/java/com/makotojava/learn/hellojunit5/solution/App.java
index cd77899..7024346 100644
--- a/src/main/java/com/makotojava/learn/hellojunit5/solution/App.java
+++ b/src/main/java/com/makotojava/learn/hellojunit5/solution/App.java
@@ -1,46 +1,46 @@
-package com.makotojava.learn.hellojunit5.solution;
+// package com.makotojava.learn.hellojunit5.solution;
 
-/*
- * Copyright 2017 Makoto Consulting Group, Inc.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- * http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-public class App {
-  /**
-   * Computes the sum of the specified operands.
-   * 
-   * @param operands
-   *          These are the operands. It's sort of there in the name.
-   * 
-   * @return long - The computed sum.
-   * 
-   * @throws IllegalArgumentException
-   *           If the specified array of operands is empty or long.
-   *           This is definitely an overreaction, but this is sample
-   *           code, son.
-   */
-  public long add(long[] operands) {
-    // Compute the sum
-    long ret = 0;
-    if (operands == null) {
-      throw new IllegalArgumentException("Operands argument cannot be null");
-    }
-    if (operands.length == 0) {
-      throw new IllegalArgumentException("Operands argument cannot be empty");
-    }
-    for (long operand : operands) {
-      ret += operand;
-    }
-    return ret;
-  }
-}
+// /*
+//  * Copyright 2017 Makoto Consulting Group, Inc.
+//  * 
+//  * Licensed under the Apache License, Version 2.0 (the "License");
+//  * you may not use this file except in compliance with the License.
+//  * You may obtain a copy of the License at
+//  * 
+//  * http://www.apache.org/licenses/LICENSE-2.0
+//  * 
+//  * Unless required by applicable law or agreed to in writing, software
+//  * distributed under the License is distributed on an "AS IS" BASIS,
+//  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//  * See the License for the specific language governing permissions and
+//  * limitations under the License.
+//  */
+// public class App {
+//   /**
+//    * Computes the sum of the specified operands.
+//    * 
+//    * @param operands
+//    *          These are the operands. It's sort of there in the name.
+//    * 
+//    * @return long - The computed sum.
+//    * 
+//    * @throws IllegalArgumentException
+//    *           If the specified array of operands is empty or long.
+//    *           This is definitely an overreaction, but this is sample
+//    *           code, son.
+//    */
+//   public long add(long[] operands) {
+//     // Compute the sum
+//     long ret = 0;
+//     if (operands == null) {
+//       throw new IllegalArgumentException("Operands argument cannot be null");
+//     }
+//     if (operands.length == 0) {
+//       throw new IllegalArgumentException("Operands argument cannot be empty");
+//     }
+//     for (long operand : operands) {
+//       ret += operand;
+//     }
+//     return ret;
+//   }
+// }
diff --git a/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java b/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java
index 1435c6a..8278cca 100644
--- a/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java
+++ b/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java
@@ -1,12 +1,23 @@
 package com.makotojava.learn.hellojunit5;
 
 import static org.junit.jupiter.api.Assertions.fail;
+import static org.junit.jupiter.api.Assumptions.assumeTrue;
+import static org.junit.jupiter.api.Assumptions.assumingThat;
+import static org.junit.jupiter.api.Assertions.assertAll;
+import static org.junit.jupiter.api.Assertions.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertNotNull;
+import static org.junit.jupiter.api.Assertions.assertThrows;
+import static org.junit.jupiter.api.Assertions.assertTrue;
 
 import java.beans.Transient;
+import java.time.DayOfWeek;
+import java.time.LocalDateTime;
 
 import org.junit.jupiter.api.*;
-import org.junit.*;
+import org.junit.jupiter.api.Test;
+import org.junit.jupiter.api.DisplayName;
 import org.junit.platform.runner.JUnitPlatform;
+import org.junit.rules.ExpectedException;
 import org.junit.runner.RunWith;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -16,31 +27,53 @@ import org.slf4j.LoggerFactory;
  * 
  * Class-level Exercises:
  * <ol>
- * <li>Enable Eclipse JUnit support for this test class using the {@link org.junit.runner.RunWith @RunWith} and
+ * <li>Enable Eclipse JUnit support for this test class using the
+ * {@link org.junit.runner.RunWith @RunWith} and
  * {@link org.junit.platform.runner.JUnitPlatform
  * JUnitPlatform} class.</li>
- * <li>Give the class a cool {@link org.junit.jupiter.api.DisplayName @DisplayName} that shows up in the JUnit test
+ * <li>Give the class a cool
+ * {@link org.junit.jupiter.api.DisplayName @DisplayName} that shows up in the
+ * JUnit test
  * report.</li>
  * </ol>
  *
  */
+@RunWith(JUnitPlatform.class)
+@DisplayName("JUnit 5 tests")
 public class JUnit5AppTest {
 
   // Create a JDK Logger here
+  private static final Logger log = LoggerFactory.getLogger(JUnit5AppTest.class);
 
   // Create a fixture for the class under test
+  private App app = new App();
 
   // Do something before ANY test is run in this class
+  @BeforeAll
   public static void init() {
+    log.info("Before all: init()");
   }
 
   // Do something after ALL tests in this class are run
+  @AfterAll
   public static void done() {
+    log.info("after all: done()");
+  }
+
+  @BeforeEach
+  public void setUp() throws Exception {
+    log.info("Before each: setUp()");
+  }
+
+  @AfterEach
+  public void tearDown() throws Exception {
+    log.info("After each: tearDown()");
   }
 
   // Create an instance of the test class before each @Test method is executed
 
-  // Destroy reference to the instance of the test class after each @Test method is executed
+  // Destroy reference to the instance of the test class after each @Test method
+  // is executed
 
   // Disabled test
   void testNotRun() {
@@ -51,46 +84,75 @@ public class JUnit5AppTest {
    * <ol>
    * <li>Tell JUnit this method is a test method.</li>
    * <li>Give it a cool display name for the test report.</li>
-   * <li>The reference to the class under test cannot be null. If it is, the test should fail.</li>
-   * <li>Create a group of three tests of the add methods with the following arrays of positive numbers:
+   * <li>The reference to the class under test cannot be null. If it is, the test
+   * should fail.</li>
+   * <li>Create a group of three tests of the add methods with the following
+   * arrays of positive numbers:
    * <ol>
    * <li>1, 2, 3, 4</li>
    * <li>20, 934, 110</li>
    * <li>2, 4, 6</li>
    * </ol>
-   * Ensure the actual sum matches the expected sum for each group of numbers. Make sure that all groups of numbers are
+   * Ensure the actual sum matches the expected sum for each group of numbers.
+   * Make sure that all groups of numbers are
    * tested (i.e., if one fails, it should not fail the test method). Hint: use
-   * {@link org.junit.jupiter.api.Assertions#assertAll(org.junit.jupiter.api.function.Executable...) assertAll()}
+   * {@link org.junit.jupiter.api.Assertions#assertAll(org.junit.jupiter.api.function.Executable...)
+   * assertAll()}
    * </ol>
    */
   @Test
-  @DisplayName("Adding test")
+  @DisplayName("Adding operands test")
   public void testAdd() {
-    long[] test1= {1, 2, 3, 4};
     App app = new App();
+    long[] test1 = { 1, 2, 3, 4 };
     long result1 = app.add(test1);
-    long expected1 = 1 + 2 + 3 + 4;
-    assertEquals(result1, expected1);
+    long expected1 = 10;
+
+    long[] test2 = { 20, 934, 110 };
+    long result2 = app.add(test2);
+    long expected2 = 1064;
+    // assertEquals(result2, expected2);
+
+    long[] test3 = { 2, 4, 6 };
+    long result3 = app.add(test3);
+    long expected3 = 12;
+    // assertEquals(result3, expected3);
+
+    assertAll("Adding operands", 
+    () -> {assertEquals(result1, expected1);}, 
+    () -> {assertEquals(result2, expected2);},
+    () -> {assertEquals(result3, expected3);}
+    );
   }
 
   /**
    * Class-level Exercises:
    * <ol>
-   * <li>Make this class a nested test class (hint: use {@link org.junit.jupiter.api.Nested @Nested}).
-   * <li>Give the class a cool {@link org.junit.jupiter.api.DisplayName @DisplayName} that shows up in the JUnit test
+   * <li>Make this class a nested test class (hint: use
+   * {@link org.junit.jupiter.api.Nested @Nested}).
+   * <li>Give the class a cool
+   * {@link org.junit.jupiter.api.DisplayName @DisplayName} that shows up in the
+   * JUnit test
    * report.</li>
-   * <li>Create an instance of the {@link com.makotojava.learn.hellojunit5.App App} class specifically for this nested
+   * <li>Create an instance of the {@link com.makotojava.learn.hellojunit5.App
+   * App} class specifically for this nested
    * class:
    * <ul>
-   * <li>Set the <code>classUnderTest</code> variable in a method called <code>setUp()</code> that runs before the test
-   * method does (hint: use {@link org.junit.jupiter.api.BeforeEach @BeforeEach})</li>
+   * <li>Set the <code>classUnderTest</code> variable in a method called
+   * <code>setUp()</code> that runs before the test
+   * method does (hint: use
+   * {@link org.junit.jupiter.api.BeforeEach @BeforeEach})</li>
    * </ul>
-   * <li>Set the <code>classUnderTest</code> variable to null in a method called <code>tearDown()</code> that runs after
+   * <li>Set the <code>classUnderTest</code> variable to null in a method called
+   * <code>tearDown()</code> that runs after
    * the
-   * test method does (hint: use {@link org.junit.jupiter.api.BeforeEach @AfterEach})</li>
+   * test method does (hint: use
+   * {@link org.junit.jupiter.api.BeforeEach @AfterEach})</li>
    * </ol>
    * 
    */
+  @Nested
+  @DisplayName("Negative number tests")
   class NegativeNumbersTest {
 
     /**
@@ -98,37 +160,61 @@ public class JUnit5AppTest {
      * <ol>
      * <li>Tell JUnit this method is a test method.</li>
      * <li>Give it a cool display name for the test report.</li>
-     * <li>The reference to the class under test cannot be null. If it is, the test should fail.</li>
-     * <li>Create a group of three tests of the add methods with the following arrays of positive numbers:
+     * <li>The reference to the class under test cannot be null. If it is, the test
+     * should fail.</li>
+     * <li>Create a group of three tests of the add methods with the following
+     * arrays of positive numbers:
      * <ol>
      * <li>-1, -2, -3, -4</li>
      * <li>-20, -934, -110</li>
      * <li>-2, -4, -6</li>
      * </ol>
-     * Ensure the actual sum matches the expected sum for each group of numbers. Make sure that all groups of numbers
+     * Ensure the actual sum matches the expected sum for each group of numbers.
+     * Make sure that all groups of numbers
      * are
      * tested (i.e., if one fails, it should not fail the test method). Hint: use
-     * {@link org.junit.jupiter.api.Assertions#assertAll(org.junit.jupiter.api.function.Executable...) assertAll()}
+     * {@link org.junit.jupiter.api.Assertions#assertAll(org.junit.jupiter.api.function.Executable...)
+     * assertAll()}
      * </ol>
      */
+
+    @Test
+    @DisplayName("Adding negative operands test")
     public void testAdd() {
-      //
-      // EXERCISE: TODO: ADD CODE HERE (See Javadoc comments for instructions. Use the Javadoc View in Eclipse to see
-      // the buttery smooth javadoc above.)
-      //
-      fail("Test not implemented!");
+      App app = new App();
+      long[] test1 = {-1, -2, -3, -4};
+      long result1 = app.add(test1);
+      long expected1 = -1 - 2 - 3 - 4;
+
+      long[] test2 = {-20, -934, -110};
+      long result2 = app.add(test2);
+      long expected2 = -20 - 934 - 110;
+      // assertEquals(result2, expected2);
+
+      long[] test3 = {-2, -4, -6};
+      long result3 = app.add(test3);
+      long expected3 = -2 - 4 - 6;
+      // assertEquals(result3, expected3);
+
+      assertAll("Adding", () -> assertEquals(result1, expected1), () -> assertEquals(result2, expected2),
+          () -> assertEquals(result3, expected3));
     }
   }
 
   /**
    * Class-level Exercises:
    * <ol>
-   * <li>Make this class a nested test class (hint: use {@link org.junit.jupiter.api.Nested @Nested}).
-   * <li>Give the class a cool {@link org.junit.jupiter.api.DisplayName @DisplayName} that shows up in the JUnit test
+   * <li>Make this class a nested test class (hint: use
+   * {@link org.junit.jupiter.api.Nested @Nested}).
+   * <li>Give the class a cool
+   * {@link org.junit.jupiter.api.DisplayName @DisplayName} that shows up in the
+   * JUnit test
    * report.</li>
    * </ol>
    * 
    */
+  @Nested
+  @DisplayName("Positive and negative numbers test")
   class PositiveAndNegativeNumbersTest {
 
     /**
@@ -136,25 +222,42 @@ public class JUnit5AppTest {
      * <ol>
      * <li>Tell JUnit this method is a test method.</li>
      * <li>Give it a cool display name for the test report.</li>
-     * <li>The reference to the class under test cannot be null. If it is, the test should fail.</li>
-     * <li>Create a group of three tests of the add methods with the following arrays of positive numbers:
+     * <li>The reference to the class under test cannot be null. If it is, the test
+     * should fail.</li>
+     * <li>Create a group of three tests of the add methods with the following
+     * arrays of positive numbers:
      * <ol>
      * <li>-1, 2, -3, 4</li>
      * <li>-20, 934, -110</li>
      * <li>-2, -4, 6</li>
      * </ol>
-     * Ensure the actual sum matches the expected sum for each group of numbers. Make sure that all groups of numbers
+     * Ensure the actual sum matches the expected sum for each group of numbers.
+     * Make sure that all groups of numbers
      * are
      * tested (i.e., if one fails, it should not fail the test method). Hint: use
-     * {@link org.junit.jupiter.api.Assertions#assertAll(org.junit.jupiter.api.function.Executable...) assertAll()}
+     * {@link org.junit.jupiter.api.Assertions#assertAll(org.junit.jupiter.api.function.Executable...)
+     * assertAll()}
      * </ol>
      */
+
+    @Test
+    @DisplayName("Adding positive and negative operands test")
     public void testAdd() {
-      //
-      // EXERCISE: TODO: ADD CODE HERE (See Javadoc comments for instructions. Use the Javadoc View in Eclipse to see
-      // the buttery smooth javadoc above.)
-      //
-      fail("Test not implemented!");
+      App app = new App();
+      long[] test1 = {-1, -2, -3, -4};
+      long result1 = app.add(test1);
+      long expected1 = -1 - 2 - 3 - 4;
+
+      long[] test2 = {-20, -934, -110};
+      long result2 = app.add(test2);
+      long expected2 = -20 - 934 - 110;
+
+      long[] test3 = {-2, -4, -6};
+      long result3 = app.add(test3);
+      long expected3 = -2 - 4 - 6;
+
+      assertAll("Adding", () -> assertEquals(result1, expected1), () -> assertEquals(result2, expected2),
+          () -> assertEquals(result3, expected3));
     }
 
     /**
@@ -162,20 +265,28 @@ public class JUnit5AppTest {
      * <ol>
      * <li>Tell JUnit this method is a test method.</li>
      * <li>Give it a cool display name for the test report.</li>
-     * <li>Use the JDK 8 Date/Time API to get the current local date/time, along with a simple Assumption (hint: use
-     * {@link org.junit.jupiter.api.Assumptions#assumeTrue(boolean) assumeTrue()}) that today is Friday
-     * (or any other day of the week of your choosing, just so you pick one), or the test is skipped.</li>
-     * <li>Pass the following numbers as operands to the {@link com.makotojava.learn.hellojunit5.App#add(long[]) add}
+     * <li>Use the JDK 8 Date/Time API to get the current local date/time, along
+     * with a simple Assumption (hint: use
+     * {@link org.junit.jupiter.api.Assumptions#assumeTrue(boolean) assumeTrue()})
+     * that today is Friday
+     * (or any other day of the week of your choosing, just so you pick one), or the
+     * test is skipped.</li>
+     * <li>Pass the following numbers as operands to the
+     * {@link com.makotojava.learn.hellojunit5.App#add(long[]) add}
      * method: 1, 2, 3, 4, 5</li>
      * <li>Ensure the actual sum matches the expected sum.</li>
      * </ol>
      */
+    @Test
+    @DisplayName("Test adding on Friday")
     public void testAdd_OnlyOnFriday() {
-      //
-      // EXERCISE: TODO: ADD CODE HERE (See Javadoc comments for instructions. Use the Javadoc View in Eclipse to see
-      // the buttery smooth javadoc above.)
-      //
-      fail("Test not implemented!");
+      LocalDateTime date = LocalDateTime.now();
+      if (date.getDayOfWeek() == DayOfWeek.FRIDAY) log.info("Test was skipped because it is not Friday");
+      assumeTrue(date.getDayOfWeek() == DayOfWeek.FRIDAY, "Today is not Friday");
+      long[] operands = { 1, 2, 3, 4, 5 };
+      long expected = 15;
+      long result = app.add(operands);
+      assertEquals(expected, result);
     }
 
     /**
@@ -183,21 +294,29 @@ public class JUnit5AppTest {
      * <ol>
      * <li>Tell JUnit this method is a test method.</li>
      * <li>Give it a cool display name for the test report.</li>
-     * <li>Use the JDK 8 Date/Time API to get the current local date/time, along with a simple Assumption (hint: use
+     * <li>Use the JDK 8 Date/Time API to get the current local date/time, along
+     * with a simple Assumption (hint: use
      * {@link org.junit.jupiter.api.Assumptions#assumingThat(boolean, org.junit.jupiter.api.function.Executable)
      * assumingThat()}) that today is Friday
-     * (or any other day of the week of your choosing, just so you pick one), or the test is skipped.</li>
-     * <li>Pass the following numbers as operands to the {@link com.makotojava.learn.hellojunit5.App#add(long[]) add}
+     * (or any other day of the week of your choosing, just so you pick one), or the
+     * test is skipped.</li>
+     * <li>Pass the following numbers as operands to the
+     * {@link com.makotojava.learn.hellojunit5.App#add(long[]) add}
      * method: 1, 2, 3, 4, 5</li>
      * <li>Ensure the actual sum matches the expected sum.</li>
      * </ol>
      */
+    @Test
+    @DisplayName("Test adding on Friday with lambda")
     public void testAdd_OnlyOnFriday_WithLambda() {
-      //
-      // EXERCISE: TODO: ADD CODE HERE (See Javadoc comments for instructions. Use the Javadoc View in Eclipse to see
-      // the buttery smooth javadoc above.)
-      //
-      fail("Test not implemented!");
+      LocalDateTime date = LocalDateTime.now();
+      long[] operands = { 1, 2, 3, 4, 5 };
+      long expected = 15;
+      long result = app.add(operands);
+      assumingThat(date.getDayOfWeek().getValue() == 5,
+          () -> {
+            assertEquals(expected, result);
+          });
     }
 
   }
@@ -205,14 +324,17 @@ public class JUnit5AppTest {
   /**
    * Class-level Exercises:
    * <ol>
-   * <li>Make this class a nested test class (hint: use {@link org.junit.jupiter.api.Nested @Nested}).
-   * <li>Give the class a cool {@link org.junit.jupiter.api.DisplayName @DisplayName} that shows up in the JUnit test
+   * <li>Make this class a nested test class (hint: use
+   * {@link org.junit.jupiter.api.Nested @Nested}).
+   * <li>Give the class a cool
+   * {@link org.junit.jupiter.api.DisplayName @DisplayName} that shows up in the
+   * JUnit test
    * report.</li>
    * </ol>
    * 
    */
   @Nested
-  @DisplayName("Single Operand Test")
+  @DisplayName("Single operand tests")
   class JUnit5AppSingleOperandTest {
 
     /**
@@ -220,26 +342,32 @@ public class JUnit5AppTest {
      * <ol>
      * <li>Tell JUnit this method is a test method.</li>
      * <li>Give it a cool display name for the test report.</li>
-     * <li>The reference to the class under test cannot be null. If it is, the test should fail.</li>
-     * <li>Create a group of two tests of the add methods with the following arrays of positive numbers:
+     * <li>The reference to the class under test cannot be null. If it is, the test
+     * should fail.</li>
+     * <li>Create a group of two tests of the add methods with the following arrays
+     * of positive numbers:
      * <ol>
      * <li>1</li>
      * <li>0</li>
      * </ol>
-     * Ensure the actual sum matches the expected sum for each group of numbers. Make sure that all groups of numbers
+     * Ensure the actual sum matches the expected sum for each group of numbers.
+     * Make sure that all groups of numbers
      * are
      * tested (i.e., if one fails, it should not fail the test method). Hint: use
-     * {@link org.junit.jupiter.api.Assertions#assertAll(org.junit.jupiter.api.function.Executable...) assertAll()}
+     * {@link org.junit.jupiter.api.Assertions#assertAll(org.junit.jupiter.api.function.Executable...)
+     * assertAll()}
      * </ol>
      */
     @Test
-    @DisplayName("Testing adding numbers")
+    @DisplayName("Adding positive numbers with one operand test")
     public void testAdd_NumbersGt0() {
-      //
-      // EXERCISE: TODO: ADD CODE HERE (See Javadoc comments for instructions. Use the Javadoc View in Eclipse to see
-      // the buttery smooth javadoc above.)
-      //
-      fail("Test not implemented!");
+      long[] test1 = {1};
+      long result1 = app.add(test1);
+      long expected1 = 1;
+      long[] test2 = {0};
+      long result2 = app.add(test2);
+      long expected2 = 0;
+      assertAll("Adding", () -> assertEquals(result1, expected1), () -> assertEquals(result2, expected2));
     }
 
     /**
@@ -247,36 +375,49 @@ public class JUnit5AppTest {
      * <ol>
      * <li>Tell JUnit this method is a test method.</li>
      * <li>Give it a cool display name for the test report.</li>
-     * <li>The reference to the class under test cannot be null. If it is, the test should fail.</li>
-     * <li>Create a group of two tests of the add methods with the following arrays of positive numbers:
+     * <li>The reference to the class under test cannot be null. If it is, the test
+     * should fail.</li>
+     * <li>Create a group of two tests of the add methods with the following arrays
+     * of positive numbers:
      * <ol>
      * <li>-1</li>
      * <li>-10</li>
      * </ol>
-     * Ensure the actual sum matches the expected sum for each group of numbers. Make sure that all groups of numbers
+     * Ensure the actual sum matches the expected sum for each group of numbers.
+     * Make sure that all groups of numbers
      * are
      * tested (i.e., if one fails, it should not fail the test method). Hint: use
-     * {@link org.junit.jupiter.api.Assertions#assertAll(org.junit.jupiter.api.function.Executable...) assertAll()}
+     * {@link org.junit.jupiter.api.Assertions#assertAll(org.junit.jupiter.api.function.Executable...)
+     * assertAll()}
      * </ol>
      */
+    @Test
+    @DisplayName("Adding negative numbers with one operand test")
     public void testAdd_NumbersLt0() {
-      //
-      // EXERCISE: TODO: ADD CODE HERE (See Javadoc comments for instructions. Use the Javadoc View in Eclipse to see
-      // the buttery smooth javadoc above.)
-      //
-      fail("Test not implemented!");
+      long[] test1 = {-1};
+      long result1 = app.add(test1);
+      long expected1 = -1;
+      long[] test2 = {-10};
+      long result2 = app.add(test2);
+      long expected2 = -10;
+      assertAll("Adding", () -> assertEquals(result1, expected1), () -> assertEquals(result2, expected2));
     }
   }
 
   /**
    * Class-level Exercises:
    * <ol>
-   * <li>Make this class a nested test class (hint: use {@link org.junit.jupiter.api.Nested @Nested}).
-   * <li>Give the class a cool {@link org.junit.jupiter.api.DisplayName @DisplayName} that shows up in the JUnit test
+   * <li>Make this class a nested test class (hint: use
+   * {@link org.junit.jupiter.api.Nested @Nested}).
+   * <li>Give the class a cool
+   * {@link org.junit.jupiter.api.DisplayName @DisplayName} that shows up in the
+   * JUnit test
    * report.</li>
    * </ol>
    * 
    */
+  @Nested
+  @DisplayName("No operands tests")
   class JUnit5AppZeroOperandsTest {
 
     /**
@@ -284,20 +425,23 @@ public class JUnit5AppTest {
      * <ol>
      * <li>Tell JUnit this method is a test method.</li>
      * <li>Give it a cool display name for the test report.</li>
-     * <li>The reference to the class under test cannot be null. If it is, the test should fail.</li>
-     * <li>Pass an empty array as operands argument to the {@link com.makotojava.learn.hellojunit5.App#add(long[]) add}
+     * <li>The reference to the class under test cannot be null. If it is, the test
+     * should fail.</li>
+     * <li>Pass an empty array as operands argument to the
+     * {@link com.makotojava.learn.hellojunit5.App#add(long[]) add}
      * method.</li>
-     * <li>Ensure that an {@link java.lang.IllegalArgumentException IllegalArgumentException} is thrown (hint: use the
+     * <li>Ensure that an {@link java.lang.IllegalArgumentException
+     * IllegalArgumentException} is thrown (hint: use the
      * {@link org.junit.jupiter.api.Assertions#assertThrows(Class, org.junit.jupiter.api.function.Executable)
      * assertThrows()} method).</li>
      * </ol>
      */
+    @Test
+    @DisplayName("Empty array test")
     public void testAdd_ZeroOperands_EmptyArgument() {
-      //
-      // EXERCISE: TODO: ADD CODE HERE (See Javadoc comments for instructions. Use the Javadoc View in Eclipse to see
-      // the buttery smooth javadoc above.)
-      //
-      fail("Test not implemented!");
+      long[] operands = {};
+      app.add(operands);
+      assertThrows(IllegalArgumentException.class, ()-> app.add(operands));
     }
 
     /**
@@ -305,21 +449,26 @@ public class JUnit5AppTest {
      * <ol>
      * <li>Tell JUnit this method is a test method.</li>
      * <li>Give it a cool display name for the test report.</li>
-     * <li>The reference to the class under test cannot be null. If it is, the test should fail.</li>
-     * <li>Pass an empty array as operands argument to the {@link com.makotojava.learn.hellojunit5.App#add(long[]) add}
+     * <li>The reference to the class under test cannot be null. If it is, the test
+     * should fail.</li>
+     * <li>Pass an empty array as operands argument to the
+     * {@link com.makotojava.learn.hellojunit5.App#add(long[]) add}
      * method.</li>
-     * <li>Ensure that an {@link java.lang.IllegalArgumentException IllegalArgumentException} is thrown (hint: use the
+     * <li>Ensure that an {@link java.lang.IllegalArgumentException
+     * IllegalArgumentException} is thrown (hint: use the
      * {@link org.junit.jupiter.api.Assertions#assertThrows(Class, org.junit.jupiter.api.function.Executable)
      * assertThrows()} method).</li>
-     * <li>The test should fail if the message in the exception is not "Operands argument cannot be null".</li>
+     * <li>The test should fail if the message in the exception is not "Operands
+     * argument cannot be null".</li>
      * </ol>
      */
+    @Test
+    @DisplayName("Null array test")
     public void testAdd_ZeroOperands_NullArgument() {
-      //
-      // EXERCISE: TODO: ADD CODE HERE (See Javadoc comments for instructions. Use the Javadoc View in Eclipse to see
-      // the buttery smooth javadoc above.)
-      //
-      fail("Test not implemented!");
+      long[] operands = null;
+      app.add(operands);
+      Throwable exception = assertThrows(IllegalArgumentException.class, ()-> app.add(operands));
+      assertEquals("Operands argument cannot be null", exception.getMessage());
     }
 
   }
diff --git a/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java b/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java
index 2cb72c1..cb2f711 100644
--- a/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java
+++ b/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java
@@ -1,295 +1,295 @@
-package com.makotojava.learn.hellojunit5.solution;
+// package com.makotojava.learn.hellojunit5.solution;
 
-/*
- * Copyright 2017 Makoto Consulting Group, Inc.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- * http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-import static org.junit.jupiter.api.Assertions.assertAll;
-import static org.junit.jupiter.api.Assertions.assertEquals;
-import static org.junit.jupiter.api.Assertions.assertNotNull;
-import static org.junit.jupiter.api.Assertions.assertThrows;
-import static org.junit.jupiter.api.Assumptions.assumeTrue;
-import static org.junit.jupiter.api.Assumptions.assumingThat;
+// /*
+//  * Copyright 2017 Makoto Consulting Group, Inc.
+//  * 
+//  * Licensed under the Apache License, Version 2.0 (the "License");
+//  * you may not use this file except in compliance with the License.
+//  * You may obtain a copy of the License at
+//  * 
+//  * http://www.apache.org/licenses/LICENSE-2.0
+//  * 
+//  * Unless required by applicable law or agreed to in writing, software
+//  * distributed under the License is distributed on an "AS IS" BASIS,
+//  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//  * See the License for the specific language governing permissions and
+//  * limitations under the License.
+//  */
+// import static org.junit.jupiter.api.Assertions.assertAll;
+// import static org.junit.jupiter.api.Assertions.assertEquals;
+// import static org.junit.jupiter.api.Assertions.assertNotNull;
+// import static org.junit.jupiter.api.Assertions.assertThrows;
+// import static org.junit.jupiter.api.Assumptions.assumeTrue;
+// import static org.junit.jupiter.api.Assumptions.assumingThat;
 
-import java.time.LocalDateTime;
+// import java.time.LocalDateTime;
 
-import org.junit.jupiter.api.AfterAll;
-import org.junit.jupiter.api.AfterEach;
-import org.junit.jupiter.api.BeforeAll;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.DisplayName;
-import org.junit.jupiter.api.Nested;
-import org.junit.jupiter.api.Test;
-import org.junit.platform.runner.JUnitPlatform;
-import org.junit.runner.RunWith;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
+// import org.junit.jupiter.api.AfterAll;
+// import org.junit.jupiter.api.AfterEach;
+// import org.junit.jupiter.api.BeforeAll;
+// import org.junit.jupiter.api.BeforeEach;
+// import org.junit.jupiter.api.Disabled;
+// import org.junit.jupiter.api.DisplayName;
+// import org.junit.jupiter.api.Nested;
+// import org.junit.jupiter.api.Test;
+// import org.junit.platform.runner.JUnitPlatform;
+// import org.junit.runner.RunWith;
+// import org.slf4j.Logger;
+// import org.slf4j.LoggerFactory;
 
-/**
- * JUnit 5 (with JUnitPlatform.class)
- *
- */
-@Disabled
-@RunWith(JUnitPlatform.class)
-@DisplayName("Testing using JUnit 5")
-public class JUnit5AppTest {
+// /**
+//  * JUnit 5 (with JUnitPlatform.class)
+//  *
+//  */
+// @Disabled
+// @RunWith(JUnitPlatform.class)
+// @DisplayName("Testing using JUnit 5")
+// public class JUnit5AppTest {
 
-  private static final Logger log = LoggerFactory.getLogger(JUnit5AppTest.class);
+//   private static final Logger log = LoggerFactory.getLogger(JUnit5AppTest.class);
 
-  private App classUnderTest;
+//   private App classUnderTest;
 
-  @BeforeAll
-  public static void init() {
-    // Do something before ANY test is run in this class
-    log.info("@BeforeAll: init()");
-  }
+//   @BeforeAll
+//   public static void init() {
+//     // Do something before ANY test is run in this class
+//     log.info("@BeforeAll: init()");
+//   }
 
-  @AfterAll
-  public static void done() {
-    // Do something after ALL tests in this class are run
-    log.info("@AfterAll: done()");
-  }
+//   @AfterAll
+//   public static void done() {
+//     // Do something after ALL tests in this class are run
+//     log.info("@AfterAll: done()");
+//   }
 
-  @BeforeEach
-  public void setUp() throws Exception {
-    log.info("@BeforeEach: setUp()");
-    classUnderTest = new App();
-  }
+//   @BeforeEach
+//   public void setUp() throws Exception {
+//     log.info("@BeforeEach: setUp()");
+//     classUnderTest = new App();
+//   }
 
-  @AfterEach
-  public void tearDown() throws Exception {
-    log.info("@AfterEach: tearDown()");
-    classUnderTest = null;
-  }
+//   @AfterEach
+//   public void tearDown() throws Exception {
+//     log.info("@AfterEach: tearDown()");
+//     classUnderTest = null;
+//   }
 
-  @Test
-  @Disabled
-  @DisplayName("A disabled test")
-  void testNotRun() {
-    log.info("This test will not run (it is disabled, silly).");
-  }
+//   @Test
+//   @Disabled
+//   @DisplayName("A disabled test")
+//   void testNotRun() {
+//     log.info("This test will not run (it is disabled, silly).");
+//   }
 
-  @Test
-  @DisplayName("When numbers are > 0")
-  public void testAdd() {
-    log.info("@Test: testAdd()");
-    assertNotNull(classUnderTest);
-    assertAll(
-        () -> {
-          //
-          // Test #1
-          long[] numbersToSum = { 1, 2, 3, 4 };
-          long expectedSum = 10;
-          long actualSum = classUnderTest.add(numbersToSum);
-          assertEquals(expectedSum, actualSum);
-        },
-        () -> {
-          //
-          // Test #2
-          long[] numbersToSum = new long[] { 20, 934, 110 };
-          long expectedSum = 1064;
-          long actualSum = classUnderTest.add(numbersToSum);
-          assertEquals(expectedSum, actualSum);
-        },
-        () -> {
-          //
-          // Test #3
-          long[] numbersToSum = new long[] { 2, 4, 6 };
-          long expectedSum = 12;
-          long actualSum = classUnderTest.add(numbersToSum);
-          assertEquals(expectedSum, actualSum);
-        });
-  }
+//   @Test
+//   @DisplayName("When numbers are > 0")
+//   public void testAdd() {
+//     log.info("@Test: testAdd()");
+//     assertNotNull(classUnderTest);
+//     assertAll(
+//         () -> {
+//           //
+//           // Test #1
+//           long[] numbersToSum = { 1, 2, 3, 4 };
+//           long expectedSum = 10;
+//           long actualSum = classUnderTest.add(numbersToSum);
+//           assertEquals(expectedSum, actualSum);
+//         },
+//         () -> {
+//           //
+//           // Test #2
+//           long[] numbersToSum = new long[] { 20, 934, 110 };
+//           long expectedSum = 1064;
+//           long actualSum = classUnderTest.add(numbersToSum);
+//           assertEquals(expectedSum, actualSum);
+//         },
+//         () -> {
+//           //
+//           // Test #3
+//           long[] numbersToSum = new long[] { 2, 4, 6 };
+//           long expectedSum = 12;
+//           long actualSum = classUnderTest.add(numbersToSum);
+//           assertEquals(expectedSum, actualSum);
+//         });
+//   }
 
-  @Nested
-  @DisplayName("When numbers to add are < 0")
-  class NegativeNumbersTest {
+//   @Nested
+//   @DisplayName("When numbers to add are < 0")
+//   class NegativeNumbersTest {
 
-    private App classUnderTest;
+//     private App classUnderTest;
 
-    @BeforeEach
-    public void setUp() throws Exception {
-      classUnderTest = new App();
-    }
+//     @BeforeEach
+//     public void setUp() throws Exception {
+//       classUnderTest = new App();
+//     }
 
-    @AfterEach
-    public void tearDown() throws Exception {
-      classUnderTest = null;
-    }
+//     @AfterEach
+//     public void tearDown() throws Exception {
+//       classUnderTest = null;
+//     }
 
-    @Test
-    @DisplayName("Three tests with numbers < 0")
-    public void testAdd() {
-      assertNotNull(classUnderTest);
-      assertAll(
-          () -> {
-            //
-            // Test #1
-            long[] numbersToSum = { -1, -2, -3, -4 };
-            long expectedSum = -10;
-            long actualSum = classUnderTest.add(numbersToSum);
-            assertEquals(expectedSum, actualSum);
-          },
-          () -> {
-            //
-            // Test #2
-            long[] numbersToSum = { -20, -934, -110 };
-            long expectedSum = -1064;
-            long actualSum = classUnderTest.add(numbersToSum);
-            assertEquals(expectedSum, actualSum);
-          },
-          () -> {
-            //
-            // Test #3
-            long[] numbersToSum = new long[] { -2, -4, -6 };
-            long expectedSum = -12;
-            long actualSum = classUnderTest.add(numbersToSum);
-            assertEquals(expectedSum, actualSum);
-          });
-    }
-  }
+//     @Test
+//     @DisplayName("Three tests with numbers < 0")
+//     public void testAdd() {
+//       assertNotNull(classUnderTest);
+//       assertAll(
+//           () -> {
+//             //
+//             // Test #1
+//             long[] numbersToSum = { -1, -2, -3, -4 };
+//             long expectedSum = -10;
+//             long actualSum = classUnderTest.add(numbersToSum);
+//             assertEquals(expectedSum, actualSum);
+//           },
+//           () -> {
+//             //
+//             // Test #2
+//             long[] numbersToSum = { -20, -934, -110 };
+//             long expectedSum = -1064;
+//             long actualSum = classUnderTest.add(numbersToSum);
+//             assertEquals(expectedSum, actualSum);
+//           },
+//           () -> {
+//             //
+//             // Test #3
+//             long[] numbersToSum = new long[] { -2, -4, -6 };
+//             long expectedSum = -12;
+//             long actualSum = classUnderTest.add(numbersToSum);
+//             assertEquals(expectedSum, actualSum);
+//           });
+//     }
+//   }
 
-  @Nested
-  @DisplayName("When 0 < numbers > 0")
-  class PositiveAndNegativeNumbersTest {
+//   @Nested
+//   @DisplayName("When 0 < numbers > 0")
+//   class PositiveAndNegativeNumbersTest {
 
-    @Test
-    @DisplayName("Three tests with both positive and negative numbers")
-    public void testAdd() {
-      assertNotNull(classUnderTest);
-      assertAll(
-          () -> {
-            //
-            // Test #1
-            long[] numbersToSum = { -1, 2, -3, 4 };
-            long expectedSum = 2;
-            long actualSum = classUnderTest.add(numbersToSum);
-            assertEquals(expectedSum, actualSum);
-          },
-          () -> {
-            //
-            // Test #2
-            long[] numbersToSum = { -20, 934, -110 };
-            long expectedSum = 804;
-            long actualSum = classUnderTest.add(numbersToSum);
-            assertEquals(expectedSum, actualSum);
-          },
-          () -> {
-            //
-            // Test #3
-            long[] numbersToSum = new long[] { -2, -4, 6 };
-            long expectedSum = 0;
-            long actualSum = classUnderTest.add(numbersToSum);
-            assertEquals(expectedSum, actualSum);
-          });
-    }
+//     @Test
+//     @DisplayName("Three tests with both positive and negative numbers")
+//     public void testAdd() {
+//       assertNotNull(classUnderTest);
+//       assertAll(
+//           () -> {
+//             //
+//             // Test #1
+//             long[] numbersToSum = { -1, 2, -3, 4 };
+//             long expectedSum = 2;
+//             long actualSum = classUnderTest.add(numbersToSum);
+//             assertEquals(expectedSum, actualSum);
+//           },
+//           () -> {
+//             //
+//             // Test #2
+//             long[] numbersToSum = { -20, 934, -110 };
+//             long expectedSum = 804;
+//             long actualSum = classUnderTest.add(numbersToSum);
+//             assertEquals(expectedSum, actualSum);
+//           },
+//           () -> {
+//             //
+//             // Test #3
+//             long[] numbersToSum = new long[] { -2, -4, 6 };
+//             long expectedSum = 0;
+//             long actualSum = classUnderTest.add(numbersToSum);
+//             assertEquals(expectedSum, actualSum);
+//           });
+//     }
 
-    @Test
-    @DisplayName("This test is only run on Fridays")
-    public void testAdd_OnlyOnFriday() {
-      assertNotNull(classUnderTest);
-      LocalDateTime ldt = LocalDateTime.now();
-      assumeTrue(ldt.getDayOfWeek().getValue() == 5, "Test skipped... it's not Friday!");
-      assumeTrue(ldt.getDayOfWeek().getValue() == 5);
-      long[] operands = { 1, 2, 3, 4, 5 };
-      long expectedSum = 15;
-      long actualSum = classUnderTest.add(operands);
-      assertEquals(expectedSum, actualSum);
-    }
+//     @Test
+//     @DisplayName("This test is only run on Fridays")
+//     public void testAdd_OnlyOnFriday() {
+//       assertNotNull(classUnderTest);
+//       LocalDateTime ldt = LocalDateTime.now();
+//       assumeTrue(ldt.getDayOfWeek().getValue() == 5, "Test skipped... it's not Friday!");
+//       assumeTrue(ldt.getDayOfWeek().getValue() == 5);
+//       long[] operands = { 1, 2, 3, 4, 5 };
+//       long expectedSum = 15;
+//       long actualSum = classUnderTest.add(operands);
+//       assertEquals(expectedSum, actualSum);
+//     }
 
-    @Test
-    @DisplayName("This test is only run on Fridays (with lambda)")
-    public void testAdd_OnlyOnFriday_WithLambda() {
-      assertNotNull(classUnderTest);
-      LocalDateTime ldt = LocalDateTime.now();
-      assumingThat(ldt.getDayOfWeek().getValue() == 5,
-          () -> {
-            long[] operands = { 1, 2, 3, 4, 5 };
-            long expectedSum = 15;
-            long actualSum = classUnderTest.add(operands);
-            assertEquals(expectedSum, actualSum);
-          });
-    }
+//     @Test
+//     @DisplayName("This test is only run on Fridays (with lambda)")
+//     public void testAdd_OnlyOnFriday_WithLambda() {
+//       assertNotNull(classUnderTest);
+//       LocalDateTime ldt = LocalDateTime.now();
+//       assumingThat(ldt.getDayOfWeek().getValue() == 5,
+//           () -> {
+//             long[] operands = { 1, 2, 3, 4, 5 };
+//             long expectedSum = 15;
+//             long actualSum = classUnderTest.add(operands);
+//             assertEquals(expectedSum, actualSum);
+//           });
+//     }
 
-  }
+//   }
 
-  @Nested
-  @DisplayName("When using a single operand")
-  class JUnit5AppSingleOperandTest {
+//   @Nested
+//   @DisplayName("When using a single operand")
+//   class JUnit5AppSingleOperandTest {
 
-    @Test
-    @DisplayName("Numbers > 0")
-    public void testAdd_NumbersGt0() {
-      assertNotNull(classUnderTest);
-      assertAll(
-          () -> {
-            long[] numbersToSum = { 1 };
-            long expectedSum = 1;
-            long actualSum = classUnderTest.add(numbersToSum);
-            assertEquals(expectedSum, actualSum);
-          },
-          () -> {
-            long[] numbersToSum = { 0 };
-            long expectedSum = 0;
-            long actualSum = classUnderTest.add(numbersToSum);
-            assertEquals(expectedSum, actualSum);
-          });
-    }
+//     @Test
+//     @DisplayName("Numbers > 0")
+//     public void testAdd_NumbersGt0() {
+//       assertNotNull(classUnderTest);
+//       assertAll(
+//           () -> {
+//             long[] numbersToSum = { 1 };
+//             long expectedSum = 1;
+//             long actualSum = classUnderTest.add(numbersToSum);
+//             assertEquals(expectedSum, actualSum);
+//           },
+//           () -> {
+//             long[] numbersToSum = { 0 };
+//             long expectedSum = 0;
+//             long actualSum = classUnderTest.add(numbersToSum);
+//             assertEquals(expectedSum, actualSum);
+//           });
+//     }
 
-    @Test
-    @DisplayName("Numbers < 0")
-    public void testAdd_NumbersLt0() {
-      assertNotNull(classUnderTest);
-      assertAll(
-          () -> {
-            long[] numbersToSum = { -1 };
-            long expectedSum = -1;
-            long actualSum = classUnderTest.add(numbersToSum);
-            assertEquals(expectedSum, actualSum);
-          },
-          () -> {
-            long[] numbersToSum = { -10 };
-            long expectedSum = -10;
-            long actualSum = classUnderTest.add(numbersToSum);
-            assertEquals(expectedSum, actualSum);
-          });
-    }
-  }
+//     @Test
+//     @DisplayName("Numbers < 0")
+//     public void testAdd_NumbersLt0() {
+//       assertNotNull(classUnderTest);
+//       assertAll(
+//           () -> {
+//             long[] numbersToSum = { -1 };
+//             long expectedSum = -1;
+//             long actualSum = classUnderTest.add(numbersToSum);
+//             assertEquals(expectedSum, actualSum);
+//           }
+//           () -> {
+//             long[] numbersToSum = { -10 };
+//             long expectedSum = -10;
+//             long actualSum = classUnderTest.add(numbersToSum);
+//             assertEquals(expectedSum, actualSum);
+//           });
+//     }
+//   }
 
-  @Nested
-  @DisplayName("When zero operands")
-  class JUnit5AppZeroOperandsTest {
+//   @Nested
+//   @DisplayName("When zero operands")
+//   class JUnit5AppZeroOperandsTest {
 
-    @Test()
-    @DisplayName("Empty argument")
-    public void testAdd_ZeroOperands_EmptyArgument() {
-      assertNotNull(classUnderTest);
-      long[] numbersToSum = {};
-      assertThrows(IllegalArgumentException.class, () -> classUnderTest.add(numbersToSum));
-    }
+//     @Test()
+//     @DisplayName("Empty argument")
+//     public void testAdd_ZeroOperands_EmptyArgument() {
+//       assertNotNull(classUnderTest);
+//       long[] numbersToSum = {};
+//       assertThrows(IllegalArgumentException.class, () -> classUnderTest.add(numbersToSum));
+//     }
 
-    @Test
-    @DisplayName("Null argument")
-    public void testAdd_ZeroOperands_NullArgument() {
-      assertNotNull(classUnderTest);
-      long[] numbersToSum = null;
-      Throwable expectedException = assertThrows(IllegalArgumentException.class,
-          () -> classUnderTest.add(numbersToSum));
-      assertEquals("Operands argument cannot be null", expectedException.getLocalizedMessage());
-    }
+//     @Test
+//     @DisplayName("Null argument")
+//     public void testAdd_ZeroOperands_NullArgument() {
+//       assertNotNull(classUnderTest);
+//       long[] numbersToSum = null;
+//       Throwable expectedException = assertThrows(IllegalArgumentException.class,
+//           () -> classUnderTest.add(numbersToSum));
+//       assertEquals("Operands argument cannot be null", expectedException.getLocalizedMessage());
+//     }
 
-  }
+//   }
 
-}
+// }
diff --git a/testOutput.txt b/testOutput.txt
deleted file mode 100644
index 3982ba4..0000000
--- a/testOutput.txt
+++ /dev/null
@@ -1,387 +0,0 @@
-[INFO] Scanning for projects...
-[INFO] 
-[INFO] ---------------------< edu.byu.cs329:HelloJUnit5 >----------------------
-[INFO] Building HelloJUnit5 1.0.0
-[INFO] --------------------------------[ jar ]---------------------------------
-[INFO] 
-[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ HelloJUnit5 ---
-[INFO] Deleting /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/target
-[INFO] 
-[INFO] --- maven-checkstyle-plugin:3.1.2:check (validate) @ HelloJUnit5 ---
-[INFO] Starting audit...
-[WARN] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/main/java/com/makotojava/learn/hellojunit5/solution/App.java:18:1: Missing a Javadoc comment. [MissingJavadocType]
-[WARN] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/main/java/com/makotojava/learn/hellojunit5/solution/App.java:22: Javadoc tag '@param' should be preceded with an empty line. [RequireEmptyLineBeforeBlockTagGroup]
-[WARN] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/main/java/com/makotojava/learn/hellojunit5/App.java:18:1: Missing a Javadoc comment. [MissingJavadocType]
-[WARN] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/main/java/com/makotojava/learn/hellojunit5/App.java:21: Empty line should be followed by <p> tag on the next line. [JavadocParagraph]
-[WARN] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/main/java/com/makotojava/learn/hellojunit5/App.java:24: Empty line should be followed by <p> tag on the next line. [JavadocParagraph]
-[WARN] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/main/java/com/makotojava/learn/hellojunit5/App.java:28: Javadoc tag '@param' should be preceded with an empty line. [RequireEmptyLineBeforeBlockTagGroup]
-[WARN] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/main/java/com/makotojava/learn/hellojunit5/App.java:46: Line is longer than 100 characters (found 106). [LineLength]
-Audit done.
-[INFO] You have 0 Checkstyle violations.
-[INFO] 
-[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ HelloJUnit5 ---
-[INFO] Using 'UTF-8' encoding to copy filtered resources.
-[INFO] skip non existing resourceDirectory /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/main/resources
-[INFO] 
-[INFO] --- maven-compiler-plugin:3.6.0:compile (default-compile) @ HelloJUnit5 ---
-[INFO] Changes detected - recompiling the module!
-[INFO] Compiling 2 source files to /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/target/classes
-[INFO] 
-[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ HelloJUnit5 ---
-[INFO] Using 'UTF-8' encoding to copy filtered resources.
-[INFO] skip non existing resourceDirectory /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/resources
-[INFO] 
-[INFO] --- maven-compiler-plugin:3.6.0:testCompile (default-testCompile) @ HelloJUnit5 ---
-[INFO] Changes detected - recompiling the module!
-[INFO] Compiling 2 source files to /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/target/test-classes
-[INFO] -------------------------------------------------------------
-[ERROR] COMPILATION ERROR : 
-[INFO] -------------------------------------------------------------
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[18,36] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[18,1] static import only from classes and interfaces
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[19,36] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[19,1] static import only from classes and interfaces
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[20,36] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[20,1] static import only from classes and interfaces
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[21,36] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[21,1] static import only from classes and interfaces
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[22,36] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[22,1] static import only from classes and interfaces
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[23,36] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[23,1] static import only from classes and interfaces
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[27,29] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[28,29] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[29,29] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[30,29] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[31,29] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[32,29] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[33,29] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[34,29] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[35,33] package org.junit.platform.runner does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[36,24] package org.junit.runner does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[37,17] package org.slf4j does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[38,17] package org.slf4j does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[44,2] cannot find symbol
-  symbol: class Disabled
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[45,2] cannot find symbol
-  symbol: class RunWith
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[46,2] cannot find symbol
-  symbol: class DisplayName
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[49,24] cannot find symbol
-  symbol:   class Logger
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[116,4] cannot find symbol
-  symbol:   class Nested
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[117,4] cannot find symbol
-  symbol:   class DisplayName
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[164,4] cannot find symbol
-  symbol:   class Nested
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[165,4] cannot find symbol
-  symbol:   class DisplayName
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[228,4] cannot find symbol
-  symbol:   class Nested
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[229,4] cannot find symbol
-  symbol:   class DisplayName
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[271,4] cannot find symbol
-  symbol:   class Nested
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[272,4] cannot find symbol
-  symbol:   class DisplayName
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[3,36] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[3,1] static import only from classes and interfaces
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[9,33] package org.junit.platform.runner does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[10,24] package org.junit.runner does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[11,17] package org.slf4j does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[12,17] package org.slf4j does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[7,1] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[8,1] package org.junit does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[214,4] cannot find symbol
-  symbol:   class Nested
-  location: class com.makotojava.learn.hellojunit5.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[215,4] cannot find symbol
-  symbol:   class DisplayName
-  location: class com.makotojava.learn.hellojunit5.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[45,10] cannot find symbol
-  symbol: class JUnitPlatform
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[53,4] cannot find symbol
-  symbol:   class BeforeAll
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[59,4] cannot find symbol
-  symbol:   class AfterAll
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[65,4] cannot find symbol
-  symbol:   class BeforeEach
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[71,4] cannot find symbol
-  symbol:   class AfterEach
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[77,4] cannot find symbol
-  symbol:   class Test
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[78,4] cannot find symbol
-  symbol:   class Disabled
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[79,4] cannot find symbol
-  symbol:   class DisplayName
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[84,4] cannot find symbol
-  symbol:   class Test
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[85,4] cannot find symbol
-  symbol:   class DisplayName
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[122,6] cannot find symbol
-  symbol:   class BeforeEach
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.NegativeNumbersTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[127,6] cannot find symbol
-  symbol:   class AfterEach
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.NegativeNumbersTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[132,6] cannot find symbol
-  symbol:   class Test
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.NegativeNumbersTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[133,6] cannot find symbol
-  symbol:   class DisplayName
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.NegativeNumbersTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[168,6] cannot find symbol
-  symbol:   class Test
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.PositiveAndNegativeNumbersTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[169,6] cannot find symbol
-  symbol:   class DisplayName
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.PositiveAndNegativeNumbersTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[199,6] cannot find symbol
-  symbol:   class Test
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.PositiveAndNegativeNumbersTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[200,6] cannot find symbol
-  symbol:   class DisplayName
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.PositiveAndNegativeNumbersTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[212,6] cannot find symbol
-  symbol:   class Test
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.PositiveAndNegativeNumbersTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[213,6] cannot find symbol
-  symbol:   class DisplayName
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.PositiveAndNegativeNumbersTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[232,6] cannot find symbol
-  symbol:   class Test
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.JUnit5AppSingleOperandTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[233,6] cannot find symbol
-  symbol:   class DisplayName
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.JUnit5AppSingleOperandTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[251,6] cannot find symbol
-  symbol:   class Test
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.JUnit5AppSingleOperandTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[252,6] cannot find symbol
-  symbol:   class DisplayName
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.JUnit5AppSingleOperandTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[275,6] cannot find symbol
-  symbol:   class Test
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.JUnit5AppZeroOperandsTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[276,6] cannot find symbol
-  symbol:   class DisplayName
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.JUnit5AppZeroOperandsTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[283,6] cannot find symbol
-  symbol:   class Test
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.JUnit5AppZeroOperandsTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[284,6] cannot find symbol
-  symbol:   class DisplayName
-  location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.JUnit5AppZeroOperandsTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[66,4] cannot find symbol
-  symbol:   class Test
-  location: class com.makotojava.learn.hellojunit5.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[67,4] cannot find symbol
-  symbol:   class DisplayName
-  location: class com.makotojava.learn.hellojunit5.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[235,6] cannot find symbol
-  symbol:   class Test
-  location: class com.makotojava.learn.hellojunit5.JUnit5AppTest.JUnit5AppSingleOperandTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[236,6] cannot find symbol
-  symbol:   class DisplayName
-  location: class com.makotojava.learn.hellojunit5.JUnit5AppTest.JUnit5AppSingleOperandTest
-[INFO] 78 errors 
-[INFO] -------------------------------------------------------------
-[INFO] ------------------------------------------------------------------------
-[INFO] BUILD FAILURE
-[INFO] ------------------------------------------------------------------------
-[INFO] Total time:  1.365 s
-[INFO] Finished at: 2022-01-13T11:45:12-07:00
-[INFO] ------------------------------------------------------------------------
-[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.6.0:testCompile (default-testCompile) on project HelloJUnit5: Compilation failure: Compilation failure: 
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[18,36] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[18,1] static import only from classes and interfaces
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[19,36] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[19,1] static import only from classes and interfaces
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[20,36] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[20,1] static import only from classes and interfaces
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[21,36] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[21,1] static import only from classes and interfaces
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[22,36] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[22,1] static import only from classes and interfaces
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[23,36] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[23,1] static import only from classes and interfaces
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[27,29] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[28,29] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[29,29] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[30,29] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[31,29] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[32,29] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[33,29] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[34,29] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[35,33] package org.junit.platform.runner does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[36,24] package org.junit.runner does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[37,17] package org.slf4j does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[38,17] package org.slf4j does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[44,2] cannot find symbol
-[ERROR]   symbol: class Disabled
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[45,2] cannot find symbol
-[ERROR]   symbol: class RunWith
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[46,2] cannot find symbol
-[ERROR]   symbol: class DisplayName
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[49,24] cannot find symbol
-[ERROR]   symbol:   class Logger
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[116,4] cannot find symbol
-[ERROR]   symbol:   class Nested
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[117,4] cannot find symbol
-[ERROR]   symbol:   class DisplayName
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[164,4] cannot find symbol
-[ERROR]   symbol:   class Nested
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[165,4] cannot find symbol
-[ERROR]   symbol:   class DisplayName
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[228,4] cannot find symbol
-[ERROR]   symbol:   class Nested
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[229,4] cannot find symbol
-[ERROR]   symbol:   class DisplayName
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[271,4] cannot find symbol
-[ERROR]   symbol:   class Nested
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[272,4] cannot find symbol
-[ERROR]   symbol:   class DisplayName
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[3,36] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[3,1] static import only from classes and interfaces
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[9,33] package org.junit.platform.runner does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[10,24] package org.junit.runner does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[11,17] package org.slf4j does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[12,17] package org.slf4j does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[7,1] package org.junit.jupiter.api does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[8,1] package org.junit does not exist
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[214,4] cannot find symbol
-[ERROR]   symbol:   class Nested
-[ERROR]   location: class com.makotojava.learn.hellojunit5.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[215,4] cannot find symbol
-[ERROR]   symbol:   class DisplayName
-[ERROR]   location: class com.makotojava.learn.hellojunit5.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[45,10] cannot find symbol
-[ERROR]   symbol: class JUnitPlatform
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[53,4] cannot find symbol
-[ERROR]   symbol:   class BeforeAll
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[59,4] cannot find symbol
-[ERROR]   symbol:   class AfterAll
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[65,4] cannot find symbol
-[ERROR]   symbol:   class BeforeEach
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[71,4] cannot find symbol
-[ERROR]   symbol:   class AfterEach
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[77,4] cannot find symbol
-[ERROR]   symbol:   class Test
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[78,4] cannot find symbol
-[ERROR]   symbol:   class Disabled
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[79,4] cannot find symbol
-[ERROR]   symbol:   class DisplayName
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[84,4] cannot find symbol
-[ERROR]   symbol:   class Test
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[85,4] cannot find symbol
-[ERROR]   symbol:   class DisplayName
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[122,6] cannot find symbol
-[ERROR]   symbol:   class BeforeEach
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.NegativeNumbersTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[127,6] cannot find symbol
-[ERROR]   symbol:   class AfterEach
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.NegativeNumbersTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[132,6] cannot find symbol
-[ERROR]   symbol:   class Test
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.NegativeNumbersTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[133,6] cannot find symbol
-[ERROR]   symbol:   class DisplayName
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.NegativeNumbersTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[168,6] cannot find symbol
-[ERROR]   symbol:   class Test
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.PositiveAndNegativeNumbersTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[169,6] cannot find symbol
-[ERROR]   symbol:   class DisplayName
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.PositiveAndNegativeNumbersTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[199,6] cannot find symbol
-[ERROR]   symbol:   class Test
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.PositiveAndNegativeNumbersTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[200,6] cannot find symbol
-[ERROR]   symbol:   class DisplayName
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.PositiveAndNegativeNumbersTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[212,6] cannot find symbol
-[ERROR]   symbol:   class Test
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.PositiveAndNegativeNumbersTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[213,6] cannot find symbol
-[ERROR]   symbol:   class DisplayName
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.PositiveAndNegativeNumbersTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[232,6] cannot find symbol
-[ERROR]   symbol:   class Test
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.JUnit5AppSingleOperandTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[233,6] cannot find symbol
-[ERROR]   symbol:   class DisplayName
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.JUnit5AppSingleOperandTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[251,6] cannot find symbol
-[ERROR]   symbol:   class Test
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.JUnit5AppSingleOperandTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[252,6] cannot find symbol
-[ERROR]   symbol:   class DisplayName
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.JUnit5AppSingleOperandTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[275,6] cannot find symbol
-[ERROR]   symbol:   class Test
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.JUnit5AppZeroOperandsTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[276,6] cannot find symbol
-[ERROR]   symbol:   class DisplayName
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.JUnit5AppZeroOperandsTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[283,6] cannot find symbol
-[ERROR]   symbol:   class Test
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.JUnit5AppZeroOperandsTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/solution/JUnit5AppTest.java:[284,6] cannot find symbol
-[ERROR]   symbol:   class DisplayName
-[ERROR]   location: class com.makotojava.learn.hellojunit5.solution.JUnit5AppTest.JUnit5AppZeroOperandsTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[66,4] cannot find symbol
-[ERROR]   symbol:   class Test
-[ERROR]   location: class com.makotojava.learn.hellojunit5.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[67,4] cannot find symbol
-[ERROR]   symbol:   class DisplayName
-[ERROR]   location: class com.makotojava.learn.hellojunit5.JUnit5AppTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[235,6] cannot find symbol
-[ERROR]   symbol:   class Test
-[ERROR]   location: class com.makotojava.learn.hellojunit5.JUnit5AppTest.JUnit5AppSingleOperandTest
-[ERROR] /Users/joshuahiggins/Desktop/Desktop - Joshua’s MacBook Air/CS 329/HelloJUnit5/src/test/java/com/makotojava/learn/hellojunit5/JUnit5AppTest.java:[236,6] cannot find symbol
-[ERROR]   symbol:   class DisplayName
-[ERROR]   location: class com.makotojava.learn.hellojunit5.JUnit5AppTest.JUnit5AppSingleOperandTest
-[ERROR] -> [Help 1]
-[ERROR] 
-[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
-[ERROR] Re-run Maven using the -X switch to enable full debug logging.
-[ERROR] 
-[ERROR] For more information about the errors and possible solutions, please read the following articles:
-[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
